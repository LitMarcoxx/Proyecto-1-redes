apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dns-project.fullname" . }}-api
  labels:
    app: {{ include "dns-project.name" . }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: {{ include "dns-project.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "dns-project.name" . }}
    spec:
      containers:
        - name: dns-api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: env-file
              mountPath: /app/.env
              subPath: .env
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 25
            periodSeconds: 15
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 40
            periodSeconds: 20
            failureThreshold: 5
          resources:
{{ toYaml .Values.api.resources | indent 12 }}
      volumes:
        - name: env-file
          configMap:
            name: {{ include "dns-project.fullname" . }}-env
